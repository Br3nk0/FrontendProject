function Pacman(e,t,n){this.x=e;this.y=t;this.dir=n;this.nextDir=undefined;this.radius=Pacman_Radius;this.mouthOpen=true}Pacman.prototype.draw=function(e){if(e==undefined){ctx.fillStyle=Pacman_Color}else{ctx.fillStyle=e}ctx.beginPath();if(!this.mouthOpen){switch(this.dir){case Up:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*11/18,2*Math.PI-Math.PI*7/18,true);break;case Down:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*29/18,2*Math.PI-Math.PI*25/18,true);break;case Left:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*10/9,2*Math.PI-Math.PI*8/9,true);break;case Right:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI/9,2*Math.PI-Math.PI*17/9,true);break;default:break}}else{switch(this.dir){case Up:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*7/9,2*Math.PI-Math.PI*2/9,true);break;case Down:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*16/9,2*Math.PI-Math.PI*11/9,true);break;case Left:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*23/18,2*Math.PI-Math.PI*13/18,true);break;case Right:ctx.arc(this.x,this.y,this.radius,2*Math.PI-Math.PI*5/18,2*Math.PI-Math.PI*31/18,true);break;default:break}}ctx.lineTo(this.x,this.y);ctx.fill()};Pacman.prototype.getRow=function(){return getRowIndex(this.y)};Pacman.prototype.getCol=function(){return getColIndex(this.x)};Pacman.prototype.canMove=function(e){return canMove(this.x,this.y,e)};Pacman.prototype.move=function(){if(onGridCenter(this.x,this.y)===false){if(this.nextDir!=undefined&&(this.dir===Up&&this.nextDir===Down||this.dir===Down&&this.nextDir===Up||this.dir===Left&&this.nextDir===Right||this.dir===Right&&this.nextDir===Left)){this.dir=this.nextDir;this.nextDir=undefined}this.moveOneStep();return}else{if(this.nextDir!=undefined&&this.canMove(this.nextDir)){this.dir=this.nextDir;this.nextDir=undefined;this.moveOneStep()}else{if(this.canMove(this.dir)){this.moveOneStep()}}}};Pacman.prototype.moveOneStep=function(){var e=0;var t=0;if(!canMove(this.x,this.y,this.dir)){return}switch(this.dir){case Up:t=this.y-speed;if(t-this.radius-Wall_Width>0){this.y=t;this.mouthOpen=!this.mouthOpen}break;case Down:t=this.y+speed;if(t+this.radius+Wall_Width<Canvas_Height){this.y=t;this.mouthOpen=!this.mouthOpen}break;case Left:e=this.x-speed;if(e-this.radius-Wall_Width>0){this.x=e;this.mouthOpen=!this.mouthOpen}break;case Right:e=this.x+speed;if(e+this.radius+Wall_Width<Canvas_Width){this.x=e;this.mouthOpen=!this.mouthOpen}break;default:break}}